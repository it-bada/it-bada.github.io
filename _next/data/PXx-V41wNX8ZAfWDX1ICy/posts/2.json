{"pageProps":{"posts":[{"title":"Go언어에서 확장 가능한 워커 풀을 구축하는 방법을 단계별로 안내하는 Concurrent Processing 마스터하기","description":"","date":"2024-05-27 19:52","slug":"2024-05-27-MasteringConcurrentProcessingAStep-by-StepGuidetoBuildingaScalableWorkerPoolinGo","content":"\n**10,000개의 요청을 초당 처리해요!**\n\n🤝 LinkedIn에서 저와 연결해요. 확장 가능한 시스템을 만들어봐요.\n\n이 블로그 포스트에서는 Go를 사용하여 확장 가능한 워커 풀을 구축해볼 거에요. 이 구현은 요청의 대량을 처리하기 위해 워커 풀을 효율적으로 관리하며, 부하에 따라 워커 수를 동적으로 확장합니다. 잠재적인 함정에 대해 논하고, 그것들을 피하는 방법에 대해 알아볼 거에요.\n\n# 개요\n\n<div class=\"content-ad\"></div>\n\n우리는 다음과 같은 기능을 갖춘 작업자 풀을 생성할 것입니다:\n\n- 부하에 따라 작업자 수를 동적으로 조절합니다.\n- 요청을 타임아웃 및 재시도 메커니즘으로 처리합니다.\n- 작업자를 우아하게 종료합니다.\n\n다음은 완전한 코드와 각 부분에 대한 설명 및 문서화가 제공됩니다.\n\n![Mastering Concurrent Processing: A Step-by-Step Guide to Building a Scalable Worker Pool in Go](/assets/img/2024-05-27-MasteringConcurrentProcessingAStep-by-StepGuidetoBuildingaScalableWorkerPoolinGo_0.png)\n\n<div class=\"content-ad\"></div>\n\n# 디스패처\n\n디스패처는 작업자를 관리하고 들어오는 요청을 분배하는 역할을 합니다. 현재 부하에 따라 동적으로 작업자를 추가하거나 제거하며 모든 작업자들을 원활하게 종료합니다.\n\n- AddWorker: 풀에 새 작업자를 추가하고 작업자 수를 증가시킵니다. 작업자는 요청 처리를 시작하기 위해 실행됩니다.\n- RemoveWorker: 최소 필요한 작업자보다 많은 경우 풀에서 작업자를 제거합니다. 작업자는 stopCh 채널을 통해 중지되도록 신호를 보냅니다.\n- ScaleWorkers: 부하에 따라 작업자 수를 동적으로 조정합니다. 부하가 임계값을 초과하고 최대 허용 작업자보다 작은 경우 새 작업자가 추가됩니다. 부하가 임계값 아래이고 최소 필요한 작업자보다 많은 경우 작업자가 제거됩니다.\n- LaunchWorker: 작업자를 시작하고 작업자 수를 증가시킵니다. 일반적으로 초기 작업자 세트에 사용됩니다.\n- MakeRequest: 입력 채널에 요청을 추가합니다. 채널이 가득 찬 경우 요청은 삭제되고 메시지가 기록됩니다.\n- Stop: 모든 작업자를 원활하게 중지합니다. 모든 작업자가 현재 요청 처리를 완료할 때까지 기다립니다. 제한 시간에 도달하면 모든 작업자를 강제로 중지합니다.\n\n# 작업자\n\n<div class=\"content-ad\"></div>\n\n**Worker 구조체는 요청을 처리하는 작업자를 나타냅니다. 각 작업자는 자신만의 고루틴에서 실행되며 채널에서 수신된 들어오는 요청을 청취합니다.**\n\n- **LaunchWorker**: 작업자를 별도의 고루틴으로 실행합니다. 작업자는 입력 채널이 닫히거나 정지 신호를 받을 때까지 들어오는 요청을 처리합니다.\n- **processRequest**: 개별 요청을 처리합니다. 에러가 발생하거나 요청 시간이 초과되었을 경우 최대 지정된 재시도 횟수까지 요청을 다시 시도합니다.\n\n**코드**\n\n```go\n// struct.go\n\npackage workerpool\n\nimport \"time\"\n\n// Request는 작업자에 의해 처리될 요청을 나타냅니다.\ntype Request struct {\n    Handler    RequestHandler\n    Type       int\n    Data       interface{}\n    Timeout    time.Duration // 요청의 제한 시간\n    Retries    int           // 재시도 횟수\n    MaxRetries int           // 최대 재시도 횟수\n}\n\n// RequestHandler는 요청을 처리하는 함수 유형을 정의합니다.\ntype RequestHandler func(interface{}) error\n```\n\n<div class=\"content-ad\"></div>\n\n````\n### interface.go\n\n```go\npackage workerpool\n\nimport \"context\"\n\n// WorkerLauncher는 워커를 실행하기 위한 인터페이스입니다.\ntype WorkerLauncher interface {\n LaunchWorker(in chan Request, stopCh chan struct{})\n}\n\n// Dispatcher는 워커 풀을 관리하기 위한 인터페이스입니다.\ntype Dispatcher interface {\n AddWorker(w WorkerLauncher)\n RemoveWorker(minWorkers int)\n LaunchWorker(id int, w WorkerLauncher)\n ScaleWorkers(minWorkers, maxWorkers, loadThreshold int)\n MakeRequest(Request)\n Stop(ctx context.Context)\n}\n````\n\n### worker.go\n\n```go\npackage workerpool\n\nimport (\n \"context\"\n \"fmt\"\n \"sync\"\n \"time\"\n)\n\n// Worker는 요청을 처리하는 워커를 나타냅니다.\ntype Worker struct {\n Id         int\n Wg         *sync.WaitGroup\n ReqHandler map[int]RequestHandler\n}\n\n// LaunchWorker는 워커를 실행하여 들어오는 요청을 처리합니다.\n// 이는 별도의 고루틴에서 실행되며, 입력 채널에서 들어오는 요청을 지속적으로 수신합니다.\n// 워커는 입력 채널이 닫히거나 중지 신호를 받으면 정상적으로 종료됩니다.\nfunc (w *Worker) LaunchWorker(in chan Request, stopCh chan struct{}) {\n go func() {\n  defer w.Wg.Done()\n  for {\n   select {\n   case msg, open := <-in:\n    if !open {\n     // 채널이 닫히면 처리를 중지하고 반환합니다.\n     fmt.Println(\"워커 중지:\", w.Id)\n     return\n    }\n    w.processRequest(msg)\n    time.Sleep(1 * time.Microsecond) // 밀리초 단위의 작은 지연\n   case <-stopCh:\n    fmt.Println(\"워커 중지:\", w.Id)\n    return\n   }\n  }\n }()\n}\n\n// processRequest는 하나의 요청을 처리합니다.\nfunc (w *Worker) processRequest(msg Request) {\n fmt.Printf(\"워커 %d가 요청 처리 중: %v\\n\", w.Id, msg)\n var handler RequestHandler\n var ok bool\n if handler, ok = w.ReqHandler[msg.Type]; !ok {\n  fmt.Println(\"핸들러가 구현되지 않았습니다: 워커ID:\", w.Id)\n } else {\n  if msg.Timeout == 0 {\n   msg.Timeout = time.Duration(10 * time.Millisecond) // 기본 타임아웃\n  }\n  for attempt := 0; attempt <= msg.MaxRetries; attempt++ {\n   var err error\n   done := make(chan struct{})\n   ctx, cancel := context.WithTimeout(context.Background(), msg.Timeout)\n   defer cancel()\n\n   go func() {\n    err = handler(msg.Data)\n    close(done)\n   }()\n\n   select {\n   case <-done:\n    if err == nil {\n     return // 성공적으로 처리\n    }\n    fmt.Printf(\"워커 %d: 요청 처리 중 오류: %v\\n\", w.Id, err)\n   case <-ctx.Done():\n    fmt.Printf(\"워커 %d: 요청 처리 시간 초과: %v\\n\", w.Id, msg.Data)\n   }\n   fmt.Printf(\"워커 %d: 요청 %v에 대한 재시도 %d\\n\", w.Id, attempt, msg.Data)\n  }\n  fmt.Printf(\"워커 %d: %d번 재시도 후 요청 %v 처리 실패\\n\", w.Id, msg.MaxRetries, msg.Data)\n }\n}\n```\n\n### dispatcher.go\n\n```go\npackage workerpool\n\nimport (\n \"context\"\n \"fmt\"\n \"sync\"\n \"time\"\n)\n\n// ReqHandler는 요청 타입별로 매핑된 핸들러 맵입니다.\nvar ReqHandler = map[int]RequestHandler{\n 1: func(data interface{}) error {\n  return nil\n },\n}\n\n// dispatcher는 워커 풀을 관리하고 들어오는 요청을 워커들 사이에 분배하는 역할을 합니다.\ntype dispatcher struct {\n inCh        chan Request\n wg          *sync.WaitGroup\n mu          sync.Mutex\n workerCount int\n stopCh      chan struct{} // 워커에 중지 신호를 보내기 위한 채널\n}\n\n// AddWorker는 새로운 워커를 풀에 추가하고 워커 수를 증가시킵니다.\nfunc (d *dispatcher) AddWorker(w WorkerLauncher) {\n d.mu.Lock()\n defer d.mu.Unlock()\n d.workerCount++\n d.wg.Add(1)\n w.LaunchWorker(d.inCh, d.stopCh)\n}\n\n// RemoveWorker는 워커 수가 minWorkers보다 큰 경우 워커를 풀에서 제거합니다.\nfunc (d *dispatcher) RemoveWorker(minWorkers int) {\n d.mu.Lock()\n defer d.mu.Unlock()\n if d.workerCount > minWorkers {\n  d.workerCount--\n  d.stopCh <- struct{}{} // 워커에 중지 신호 전송\n }\n}\n\n// ScaleWorkers는 현재 부하에 따라 워커 수를 동적으로 조정합니다.\nfunc (d *dispatcher) ScaleWorkers(minWorkers, maxWorkers, loadThreshold int) {\n ticker := time.NewTicker(time.Microsecond)\n defer ticker.Stop()\n\n for range ticker.C {\n  load := len(d.inCh) // 현재 부하는 채널에 대기 중인 요청 수\n  if load > loadThreshold && d.workerCount < maxWorkers {\n   fmt.Println(\"스케일링 트리거\")\n   newWorker := &Worker{\n    Wg:         d.wg,\n    Id:         d.workerCount,\n    ReqHandler: ReqHandler,\n   }\n   d.AddWorker(newWorker)\n  } else if load < 0.75*loadThreshold && d.workerCount > minWorkers {\n   fmt.Println(\"축소 트리거\")\n   d.RemoveWorker(minWorkers)\n  }\n }\n}\n\n// LaunchWorker는 워커를 시작하고 워커 수를 증가시킵니다.\nfunc (d *dispatcher) LaunchWorker(id int, w WorkerLauncher) {\n w.LaunchWorker(d.inCh, d.stopCh) // 중지 채널을 워커에 전달\n d.mu.Lock()\n d.workerCount++\n d.mu.Unlock()\n}\n\n// MakeRequest는 요청을 입력 채널에 추가하거나 채널이 가득 찬 경우 삭제합니다.\nfunc (d *dispatcher) MakeRequest(r Request) {\n select {\n case d.inCh <- r:\n default:\n  // 채널이 가득 찬 경우 처리\n  fmt.Println(\"요청 채널이 가득 찼습니다. 요청 삭제됨.\")\n  // 다른 조치를 취하기 전에 로깅, 요청 버퍼링 또는 다른 조치를 취할 수 있습니다.\n }\n}\n\n// Stop는 모든 워커를 정상적으로 종료하고 처리가 완료될 때까지 기다립니다.\nfunc (d *dispatcher) Stop(ctx context.Context) {\n fmt.Println(\"\\n중지 호출됨\")\n close(d.inCh) // 더 이상 요청을 보내지 않음을 알리기 위해 입력 채널 닫기\n done := make(chan struct{})\n\n go func() {\n  d.wg.Wait() // 모든 워커가 종료될 때까지 대기\n  close(done)\n }()\n\n select {\n case <-done:\n  fmt.Println(\"모든 워커가 정상적으로 중지됨\")\n case <-ctx.Done():\n  fmt.Println(\"시간 초과, 강제 종료\")\n  // 시간 초과 시 모든 워커 강제 종료\n  for i := 0; i < d.workerCount; i++ {\n   d.stopCh <- struct{}{}\n  }\n }\n\n d.wg.Wait()\n}\n\n// NewDispatcher는 버퍼링된 채널과 웨이트 그룹이 있는 새로운 디스패처를 생성합니다.\nfunc NewDispatcher(b int, wg *sync.WaitGroup, maxWorkers int) Dispatcher {\n return &dispatcher{\n  inCh:   make(chan Request, b),\n  wg:     wg,\n  stopCh: make(chan struct{}, maxWorkers), // 블로킹을 방지하기 위한 버퍼링된 채널\n }\n}\n```\n\n### main.go\n\n```go\npackage main\n\nimport (\n \"context\"\n \"fmt\"\n \"runtime\"\n \"sync\"\n \"time\"\n wp \"workerpool/workerpool\"\n)\n\n\n\n<div class=\"content-ad\"></div>\n\n# 메인\n\n주요 기능은 디스패처와 워커를 초기화하고 작업을 보내며, 디스패처를 원활하게 종료합니다.\n\n- GOMAXPROCS를 사용 가능한 CPU 수로 설정합니다.\n- 디스패처를 초기화하고 초기 워커 집합을 시작합니다.\n- 디스패처에 요청을 보냅니다.\n- 타임아웃을 설정하여 디스패처를 원활하게 종료합니다.\n\n우리는 컨텍스트 타임아웃, 버퍼 크기, 최소/최대 워커와 같은 매개변수를 조정하여 초당 요청(RPS)을 최대화하고 애플리케이션 성능을 향상시킬 것입니다.\n\n<div class=\"content-ad\"></div>\n\nStay tuned for practical insights and real-world examples!\n\nIf you've read up till now, I hope you enjoyed this article. If you did, please show your support by giving it a clap, as it helps me stay motivated to assist the community.\n\nFeel free to leave a comment if you noticed any discrepancies in this article or if you have any questions related to the content.\n\nThank you for your time.\n\n<div class=\"content-ad\"></div>\n\n마음에 드시는 사람들과 언제든 연락하세요! LinkedIn에 연결해보는 건 어떠세요? 🤝\n```\n","ogImage":{"url":"/assets/img/2024-05-27-MasteringConcurrentProcessingAStep-by-StepGuidetoBuildingaScalableWorkerPoolinGo_0.png"},"coverImage":"/assets/img/2024-05-27-MasteringConcurrentProcessingAStep-by-StepGuidetoBuildingaScalableWorkerPoolinGo_0.png","tag":["Tech"],"readingTime":8},{"title":"애플 프런트엔드 인터뷰 경험","description":"","date":"2024-05-27 19:51","slug":"2024-05-27-AppleFrontendInterviewExperience","content":"\n\n![](/assets/img/2024-05-27-AppleFrontendInterviewExperience_0.png)\n\n## 나에 대한 배경:\n\n2018년에 공학 학위를 받았어요. 제 경력은 풀 스택 개발자로 Infosys에서 시작했죠. 시간이 지남에 따라 UI 개발에 열정을 발견하고 그 영역에 더 집중하기 시작했어요. Infosys에서 2년을 보낸 후, UI 개발자로 ThoughtWorks로 이직했고, 그리고 Meesho에 합류하여 풀 스택/프론트엔드 개발을 계속하고 있어요.\n\n## 애플이 어떻게 됐을까요?\n\n<div class=\"content-ad\"></div>\n\nMeesho에서 일하면서 새로운 직업 기회를 탐색하던 중, 2023년 11월에 Apple에 온라인 신청을 하게 되었습니다. 제 신청이 거절되었다고 생각하고 있었지만, 2024년 3월에 예상치 못한 전화 한 통을 받게 되었습니다. 그 분은 제 프로필이 최종 선발되었음을 알려주셨고, 면접 과정을 안내해 주셨어요.\n\n# 면접 과정:\n\n## 1차: 기계 코딩 (가정에서 과제):\n\n1. React에 대한 능숙도 평가 (컴포넌트, 상태 관리, 훅).\n2. 작은 프로젝트 생성이나 특정 문제 해결이 포함될 수 있습니다.\n3. 최근 React 기능 및 API와의 통합 연습.\n\n<div class=\"content-ad\"></div>\n\n## 라운드 2: 프론트엔드 전용 기술 라운드:\n\n1. HTML, CSS, JavaScript (ES6+) 및 프론트엔드 프레임워크 (React, Angular)에 집중합니다.\n2. 현대적인 프론트엔드 패턴과 최고의 실천 방법에 대한 이해를 평가합니다.\n3. 프론트엔드 개발과 관련된 코딩 도전 과제에 대비하세요.\n\n## 라운드 3: 고수준 디자인 (HLD) + 자료 구조 및 알고리즘 (DSA):\n\n1. 확장 가능하고 효율적인 시스템을 설계할 수 있는 능력을 평가합니다.\n2. 자료 구조와 알고리즘을 활용한 문제 해결 능력을 테스트합니다.\n3. 시스템 디자인 컨셉을 연습하고 코딩 플랫폼에서 문제를 해결하세요.\n\n<div class=\"content-ad\"></div>\n\n## 라운드 4: Low-Level Design (LLD) + 이전 작업 경험:\n\n1. 이전 프로젝트 및 기여에 대해 자세히 설명합니다.\n2. 귀하의 작업과 관련된 Low-Level Design 개념을 더 자세히 탐구합니다.\n3. 직면한 도전과 문제 해결 방안을 설명합니다.\n4. BE 관련 프로젝트에 대한 토론\n\n# 하이더라바드 지사에서의 현장 인터뷰:\n\n## 5: 채용 매니저:\n\n<div class=\"content-ad\"></div>\n\n## 라운드 6: 비즈니스 매니저와의 행동 면접:\n\n1. 소프트 스킬, 문화적 적합성 및 직장 상황 처리 능력을 평가합니다.\n2. 행동 질문에 대한 답변을 구조화하기 위해 STAR 방법을 사용합니다.\n3. 팀워크와 리더십을 나타내는 구체적인 예시를 제공하세요.\n\n## 라운드 7: 이사와의 행동 면접:\n\n<div class=\"content-ad\"></div>\n\n## Round 8: Cultural Fit Interview:\n\n1. 회사의 비전과 조직의 장기적인 목표에 대해 이야기해보세요.\n2. 리더십 잠재력과 전략적 사고를 강조해주세요.\n3. 영향을 미치고 중요한 프로젝트를 이끌었던 사례들을 들어주세요.\n\n---\n\n1. 회사의 문화와 가치관에 대한 글로벌 시각에서의 적합성을 평가해보세요.\n2. 개인의 가치관과 회사 문화와의 일치 여부를 논의해주세요.\n3. 다양하고 글로벌한 팀에서의 작업 경험 사례를 공유해주세요.\n\n참고: NDA(비밀 유지 협약)로 인해 정확한 인터뷰 질문은 공유할 수 없습니다. 또한, 역할과 팀에 따라 프로세스가 다를 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n## Result:\n\n인터뷰 라운드를 모두 마치고 나서 한 주 뒤에 인사팀으로부터 전화를 받았어요. 선발되었다는 소식을 전해주셨어요. 그 순간, 세상 끝까지 올라간 기분이었어요. 몇 년 동안의 노력과 Infosys에서 Apple로의 여정을 되돌아보면, 얼마나 멀리 왔는지 깨달았죠 :)","ogImage":{"url":"/assets/img/2024-05-27-AppleFrontendInterviewExperience_0.png"},"coverImage":"/assets/img/2024-05-27-AppleFrontendInterviewExperience_0.png","tag":["Tech"],"readingTime":3},{"title":"아마존 드롭배송이 끝났다고 진짜야","description":"","date":"2024-05-27 19:50","slug":"2024-05-27-AmazonDropshippingisDeadIsItTrue","content":"\n\n“드롭 배송은 더 이상 가능하지 않습니다”\n\n안녕하세요, 미디움 친구들,\n\n“아마존 드롭 배송”에 관한 또 다른 흥미로운 이야기를 가져왔습니다.\n\n본문에서 아마존 드롭 배송에 대해 이야기하겠으며, 아마존 드롭 배송이 종료되었고 더 이상 아마존에서 이를 진행할 수 없다는 사실을 알려드리겠습니다.\n\n<div class=\"content-ad\"></div>\n\n**아마존 드롭쉽핑은 더 이상 유효할까요?**\n\n약간의 년도 전에 아마존 드롭쉽핑은 매우 유명했고 모두가 아마존에서 이를 하고 있었지만 요즘은 드롭쉽핑이 죽었다고 합니다. 드롭쉽핑에서는 투자가 필요하지 않고 고객 주문을 받으면 고객에게 상품을 보내기만 하면 되기 때문에 간단하고 쉬웠죠.\n\n드롭쉽핑에서는 공급 업체로부터 주문을 발송하는 데 약간의 투자만 필요했으나 이제는 매우 어려워졌습니다. 왜냐하면 아마존이 드롭쉽핑을 포함한 모든 계정을 차단했기 때문입니다.\n\n<div class=\"content-ad\"></div>\n\n드롭쉬핑을 하면 재고를 사거나 어떠한 물건도 보관할 필요가 없어서 쉽고 누구나 쉽게 할 수 있습니다.\n\n하지만, 아마존은 이 계정이 드롭쉬핑을 하는 것을 감지하면 해당 계정을 비활성화시키고 있습니다.\n\n따라서, 지금은 아마존 FBA가 인기를 끌고 있습니다. 이 모델에서는 일부 재고를 사야하고 이를 아마존 창고에 넣어야 합니다. 아마존은 제품을 스스로 발송하고 라벨을 붙여 주기 때문에 당신은 아무것도 할 필요가 없습니다.\n\n고객으로부터 주문을 받으면 아마존이 대신에 제품을 고객의 주소로 발송합니다. 간편하고 쉽죠! 당신은 스토어에서 주문을 받기만 하면 됩니다.\n\n<div class=\"content-ad\"></div>\n\n이 글이 앞으로 도움이 되기를 바래요🥰🥰\n\n제 글을 읽어 주셔서 감사해요. 더 많은 유익한 글을 위해 팔로우해 주세요!✨📚","ogImage":{"url":"/assets/img/2024-05-27-AmazonDropshippingisDeadIsItTrue_0.png"},"coverImage":"/assets/img/2024-05-27-AmazonDropshippingisDeadIsItTrue_0.png","tag":["Tech"],"readingTime":1},{"title":"자율 주행 자동차 더 안전하고 효율적인 미래를 향해","description":"","date":"2024-05-21 00:13","slug":"2024-05-21-Self-DrivingCarsNavigatingTowardsaSaferandMoreEfficientFuture","content":"\n![Self-Driving Cars](/assets/img/2024-05-21-Self-DrivingCarsNavigatingTowardsaSaferandMoreEfficientFuture_0.png)\n\n## Self-Driving Cars: 안전하고 더 효율적인 미래로 나아가는 길\n\n교통 분야에서 자율 주행 자동차는 우리가 이동하는 방식을 혁신적으로 변화시킬 수 있는 혁명적인 혁신을 대표합니다. 고급 센서, 인공 지능 및 기계 학습 알고리즘을 장착한 자율 주행 자동차는 도로를 탐색하고, 교통 상황을 해석하며, 운전 결정을 인간 개입 없이 자율적으로 내릴 수 있는 능력을 갖추고 있습니다. 기업들과 연구진이 이 기술을 개발하고 정밀화하는 과정에서 자율 주행 자동차는 도로 안전성을 향상시키고, 교통 체증을 줄이며, 운송 분야에 더 효율적이고 지속 가능한 미래를 열어 줄 것을 약속하고 있습니다.\n\n## Self-Driving Cars 이해하기:\n\n\n\n<div class=\"content-ad\"></div>\n\n자율 주행 자동차, 또는 무인 자동차로도 알려진 자율 주행 차량은 환경을 감지하고 인간의 개입 없이 항해할 수 있는 차량입니다. 이러한 차량들은 카메라, LiDAR, 레이더, GPS와 같은 센서들의 조합을 활용하여 주변 환경을 지각하고 도로 상의 장애물, 보행자, 그리고 다른 차량을 감지할 수 있습니다.\n\n이러한 센서들이 수집한 데이터는 인공 지능 알고리즘을 갖춘 차량 내 컴퓨터 시스템에 의해 처리되며, 정보를 분석하고 운전 결정을 내리며 실시간으로 차량을 제어합니다. 지속적인 학습과 적응을 통해, 자율 주행 자동차들은 운전 성능과 안전성을 시간이 지남에 따라 향상시켜, 보다 신뢰성 있고 다양한 운전 시나리오를 처리할 수 있는 능력을 키웁니다.\n\n# 자율 주행 자동차의 장점:\n\n자율 주행 자동차는 전통적인 인간 운전 차량들에 비해 여러 잠재적인 이점을 제공합니다.\n\n<div class=\"content-ad\"></div>\n\n**개선된 도로 안전성:** 자율 주행 자동차의 가장 중요한 이점 중 하나는 인간의 실수로 인한 교통 사고와 사망률을 줄일 수 있는 잠재력입니다. 고급 센서와 알고리즘을 통해 자율 주행 자동차는 인간 운전자보다 빠르고 정확하게 위험을 감지하고 대응할 수 있어 도로 안전성을 크게 향상시키고 생명을 구할 수 있습니다.\n\n# 교통 체증 감소:\n\n자율 주행 자동차는 서로 통신하고 사람보다 효율적으로 움직임을 조정함으로써 교통 흐름을 최적화하고 혼잡을 줄일 수 있는 잠재력이 있습니다. 실시간 데이터 공유와 지능적인 라우팅 알고리즘을 통해 자율 주행 자동차는 지연을 최소화하고 교통 흐름을 개선하며 교통 수단의 전반적인 환경 영향을 줄일 수 있습니다.\n\n# 접근성 향상:\n\n<div class=\"content-ad\"></div>\n\n자율 주행 자동차는 연령, 장애 또는 기타 요인으로 운전할 수 없는 개인들에게 접근성과 이동성을 높일 수 있는 잠재력을 지니고 있습니다. 자율 주행 교통수단을 제공함으로써, 자율 주행 자동차는 이동 능력이 제한된 개인들의 독립성과 삶의 질을 향상시킬 수 있어서 필수 서비스에 액세스하고 사회적으로 더 활발하게 참여할 수 있도록 지원하고 있습니다.\n\n## 향상된 효율성:\n\n자율 주행 자동차는 부드러운 가속 및 감속, 적응형 크루즈 컨트롤, 경로 최적화 등 더 효율적인 운전 전략을 구현함으로써 연료 효율성을 최적화하고 배출을 줄일 수 있는 잠재력을 지니고 있습니다. 불필요한 아이들링을 최소화하고 정체 및 정지 상황을 줄여 통행 패턴을 최적화함으로써, 자율 주행 자동차는 보다 지속 가능하고 환경 친화적인 교통 시스템에 기여할 수 있습니다.\n\n## 도전과 고려 사항:\n\n<div class=\"content-ad\"></div>\n\n자율 주행 자동차는 잠재적인 혜택이 있지만, 보편적으로 수용되고 주류 교통 시스템에 통합되기 위해서는 해결해야 할 여러 가지 도전과 고려 사항이 있습니다. 이러한 도전 사항은 다음과 같습니다:\n\n**안전 및 신뢰성:**\n\n자율 주행 자동차의 안전 및 신뢰성을 보장하는 것은 절대적인 관심사로 남아 있습니다. 자율 주행 시스템에 발생하는 오류나 기능 이상이 심각한 결과를 초래할 수 있기 때문입니다. 기업과 연구자들은 자율 주행 기술을 철저하게 테스트하고 검증하여 사고 발생 위험을 최소화하고 자율 주행 차량이 안전하게 보급되도록 해야 합니다.\n\n**규정 및 법적 틀:**\n\n\n<div class=\"content-ad\"></div>\n\nThe development of regulatory and legal frameworks for self-driving cars presents significant challenges as existing laws may not fully address the unique characteristics and implications of autonomous vehicles. Governments and regulatory bodies need to collaborate closely with industry stakeholders to establish clear standards and guidelines for testing, deploying, and operating self-driving cars.\n\n### Ethical and Moral Considerations:\n\nSelf-driving cars introduce complex ethical and moral dilemmas, especially concerning decision-making algorithms and liability in accidents or emergencies. Questions on how autonomous vehicles should prioritize the safety of occupants versus pedestrians, and who should be held accountable for accidents involving self-driving cars, warrant thoughtful deliberation and public discourse.\n\n### Privacy and Security Concerns:\n\n<div class=\"content-ad\"></div>\n\n## 자율 주행 자동차의 미래:\n\n***자율 주행 자동차는 거대한 양의 데이터를 생성하며 주변 환경, 탑승객 및 주행 행태에 대한 우려를 불러일으키고 있습니다.*** 기업과 정책 결정자들은 민감한 정보를 보호하고, 자율 주행 차량 시스템의 미사용자 접속 또는 조작을 방지하기 위해 견고한 데이터 보호 조치와 사이버 보안 프로토콜을 시행해야 합니다.\n\n이러한 도전에도 불구하고, **자율 주행 자동차의 미래는 밝아 보이며, 분야에 대한 지속적인 혁신과 투자가 진전을 이끌고 있습니다.** 기술이 발전하고 규제 프레임워크가 진화함에 따라, 자율 주행 자동차는 전 세계 도로에서 점차 보편화되어, 우리의 이동 방식을 변화시키고 교통의 미래를 형성할 것으로 예상됩니다.\n\n**다가오는 몇 년 동안, 우리는 자율 주행 자동차의 안전성, 신뢰성 및 성능이 계속 향상되는 것을 기대할 수 있으며,** 다양한 분야와 산업에서의 확대된 배포 및 수용을 볼 수 있을 것입니다. **자동화와 인공 지능의 힘을 활용함으로써, 자율 주행 자동차는 전 세계 사람들을 위한 더 안전하고 효율적이며 접근성 있는 교통 시스템을 만들어 냄으로써, 21세기 모빌리티와 연결성의 새로운 시대를 열고 있습니다.**\n\n","ogImage":{"url":"/assets/img/2024-05-21-Self-DrivingCarsNavigatingTowardsaSaferandMoreEfficientFuture_0.png"},"coverImage":"/assets/img/2024-05-21-Self-DrivingCarsNavigatingTowardsaSaferandMoreEfficientFuture_0.png","tag":["Tech"],"readingTime":4},{"title":"당신만의 Xbox 스토리지 확장 카드를 만들어 돈을 절안하세요","description":"","date":"2024-05-21 00:12","slug":"2024-05-21-BuildyourownXboxStorageExpansionCardandsavemoney","content":"\n\n게임은 순환적이라고 느껴지는데요. 카트리지에서 디스크로, 하드 드라이브로 이어질 것 같았는데, 지금은 게임이 커져서 다시 카트리지로 돌아가는 것 같아요. 이 프로젝트를 시작할 때 제 생각이 그랬죠. Call of Duty HQ (240gb!)를 전용 저장 카드에 넣어서 공장 저장 용량을 다른 게임을 위해 보존할 수 있을까? 그럴 수도 있겠군요.\n\n먼저, 저장 확장 카드가 무엇인지 알아볼까요? 이것은 Xbox가 Seagate 그리고 Western Digital에 라이선스를 부여하여 Xbox Series S|X 콘솔을 위해 제조한 외장 SSD입니다. 처음에 220달러에 출시된 Seagate 카드는 소비자 친화적이지 않았지만, 가격이 조금씩 내려오기 시작했어요. 나중에 Western Digital도 라이선스 버전을 150달러에 출시했는데, 이것 또한 Seagate 카드의 특징입니다. 이 카드들을 비싼 가격으로 만들어주는 요소가 무엇일까요?\n\nXbox의 벨로시티 아키텍처에 대한 등급이 NVMe SSD w/PCIe 4.0x2입니다. 콘솔 OS와 향상된 게임을 담고 있는 내부 SSD는 실제로 Western Digital SN530 NVMe SSD입니다. 인터넷에 찾아보면 찾을 수 있지만, 조금 기다려주세요! — 문제가 있어요. 콘솔에서 찾을 수 있는 것들은 CH로 표시되어 있지만 시장에 나온 제품은 PC로 표시돼요. 이 차이점과 레딧, 유튜브, 그리고 다른 곳에서 온 혼합된 보고들은 Xbox가 PC 타입 SSD를 인식하지 않을 것임을 경고했어요. CH 타입 SSD를 얻는 것은 여전히 가능하지만, 호환도 가능합니다 — CH 타입 SSD는 중고로만 찾을 수 있고 상용 저장 확장 카드와 비슷한 가격대에서 구할 수 있어요. 그래도 희망은 있습니다.\n\n<div class=\"content-ad\"></div>\n\n이번 포스트에서 한 레딧 사용자가 PC SN530이 작동하지 않는 이유는 CH 버전이 SanDisk 컨트롤러를 통해 PCIe 4.0x2를 지원하도록 펌웨어가 조정되었기 때문이라고 주장했습니다. 그들의 생각은 시게이트 카드가 Phison E19 컨트롤러(PCIe 4.0x4)를 사용하기 때문에 호환되는 SSD와 CFExpress 어댑터를 찾으면 Xbox에서 사용할 수 있을 것이라는 것입니다. 저는 직접 연구를 하면서 그들의 포스트를 발견했고, 어떤 카드가 작동하고 어떤 것이 작동하지 않는지 이해하려고 했습니다. 그들은 \"Sintech CFexpress to M.2 2230 Nvme 어댑터 카드, Xbox Series X/S Expansion Memory와 호환됨(Only Support WD CH SN530 /SSSTC XA1 PCIe4.0 SSD)\"에 링크를 걸었습니다. XA1/XA2는 사실상 동일한 Prison E19 컨트롤러 사양을 충족하는 것입니다. 따라서 우리가 해야 할 일은 호환되는 SSSTC XA1 SSD를 찾는 것뿐입니다.\n\n![Build your own Xbox Storage Expansion Card and save money](/assets/img/2024-05-21-BuildyourownXboxStorageExpansionCardandsavemoney_1.png)\n\n이를 위해 70달러에 \"보증 작동\"하는 제품을 쉽게 찾았습니다. 불행하게도, 이 테스트를 위해 찾을 수 있는 가장 작은 크기는 1TB입니다 — 하지만 콜 오브 디티 본부가 얼마나 커질지 아무도 모릅니다, 맞죠? 저는 투자를 미래까지 대비하여 하고 있는 것뿐입니다. 우리가 필요한 마지막 것은 M.2에서 USB 리더기로, 카드를 컴퓨터에 쉽게 연결하여 새로운 저장 확장 카드로 사용할 준비를 하기 위함입니다.\n\n요약하면 — 혹은 소개를 건너뛴 분들을 위해 요구사항은:\n- 1TB 2230 M.2 SSD (PCIe 4.0x4) (이베이)\n- XA1 to CFExpress Type B 어댑터 (아마존)\n- M.2 to USB 어댑터 (아마존)\n- 컴퓨터 (가능하면 윈도우)\n- Xbox Series 콘솔 (당연히)\n\n<div class=\"content-ad\"></div>\n\n자료를 모으면 M.2 SSD를 USB 어댑터에 넣어야 합니다. SSD를 어댑터에 맞게 길게 만들려면 SSD에 있는 길이 조절기를 사용하고 저장 카드 어댑터에 포함된 나사 중 하나를 사용하거나, 일단은 고무줄을 사용해 잡을 수 있습니다.\n\nSSD/USB를 컴퓨터에 연결하고 windows 검색창에 diskpart를 입력하여 diskpart를 엽니다. 다음과 같은 콘솔이 열릴 것입니다.\n\n![image](/assets/img/2024-05-21-BuildyourownXboxStorageExpansionCardandsavemoney_2.png)\n\n다음 명령을 실행하세요:\nlist disk\n컴퓨터에 연결된 디스크 목록이 표시됩니다. 일반적으로 SSD는 마지막 디스크일 것이지만, 포함된 메타데이터를 확인하여 SSD의 크기가 약 890GB로 표시됩니다. 번호로 \"select disk #\" 명령을 사용하여 디스크를 선택하세요. 바로 다음 단계가 디스크를 지우기 때문에 올바른 디스크를 선택했는지 확인하세요. 현재까지의 명령어를 이해하지 못하신다면 실행하지 마십시오.\n그 다음, \"disk clear\" 명령을 실행하세요. 디스크가 지워졌다는 피드백을 받을 것입니다. 명령 프롬프트를 닫고 windows 검색으로 돌아가세요. \"disk management\"을 검색하여 디스크 관리 유틸리티인 \"하드 디스크 파티션 만들기 및 포맷하기\"를 엽니다. 거기서 \"Disk X는 초기화되지 않았습니다.\"라는 팝업이 표시될 것입니다. SSD를 포맷하기 위해 안내에 따라 진행하세요. MBT가 선택되었는지 확인하세요. 초기화한 후, 초기화된 드라이브의 볼륨 영역 내에서 마우스 오른쪽 버튼을 클릭하여 새로운 간단한 볼륨을 만들어야 합니다. NTFS 형식으로 포맷하세요. 드라이브 문자와 볼륨 이름은 중요하지 않습니다. Xbox에서 다시 할당 및 이름이 지정될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n이 단계를 완료한 후 Xbox를 켜고 USB를 연결할 차례입니다. Xbox가 USB를 원격 저장공간으로 인식하지 못하기 때문에 우리는 Xbox USB 인터페이스를 통해 형식을 지정하지 않으면 되지 않습니다. 그리고 우리가 방금 한 단계 없이 USB 인터페이스가 그것을 인식하지 않을 것입니다.\n\nXbox에 연결한 후 저장장치에 대한 팝업이 표시될 것입니다. 저장 종류를 선택하라는 프롬프트가 나오면 Games and Apps를 선택하고 원하는 대로 이름을 지으십시오. Xbox가 드라이브 초기화를 완료하고 Xbox 저장 장치 페이지 (내 게임 및 앱 `관리` `저장 장치)에 나타날 것입니다.\n\n이제 재미있는 부분입니다. 드라이브를 분리하고 USB 어댑터에서 빼내서 사용자 정의 확장 카드 케이스에 함께 넣을 수 있습니다. 어댑터에 포함된 열 패딩 필름을 제거하고 SSD의 칩 쪽에 부착하십시오. SSD를 저장 카드에 넣고 케이스에 나사로 고정하십시오. 제대로 조립하면 콘솔 뒷면에 연결하십시오. 진실의 순간 후 잠시 후에 다시 나타나서 게임을 다운로드할 수 있어야 합니다. 이제 $140이 드는 소매 버전 대신 약 $110에 게임 카트리지를 갖게 되었습니다. 네, $30은 많지 않지만 적어도 게임에 사용할 돈이 생겼습니다. 저장 용량이 작은 카트리지로 이 프로젝트를 다시 시도할 계획입니다. 가격을 카트리지 당 $50까지 낮추는 것이 목표입니다. 호환되는 것이 무엇인지 조사하고 알아내는 문제일 뿐입니다.\n\n항상 그렇지만 문제가 발생하면 Google, Reddit을 사용하시고 여기에 의견을 남겨주시기 바랍니다. 도움이 필요하면 제가 도와드릴 수 있습니다. 행운을 빕니다. 그리고 즐거운 시간 보내세요.","ogImage":{"url":"/assets/img/2024-05-21-BuildyourownXboxStorageExpansionCardandsavemoney_0.png"},"coverImage":"/assets/img/2024-05-21-BuildyourownXboxStorageExpansionCardandsavemoney_0.png","tag":["Tech"],"readingTime":4},{"title":"AI가 이제 텍스트 프롬프트만 가지고 사실적인 비디오를 만들 수 있게 되었습니다","description":"","date":"2024-05-21 00:11","slug":"2024-05-21-AICanNowCreatePhotorealisticVideosFromJustaTextPrompt","content":"\n\n## 인공 지능\n\n![AI 이미지](/assets/img/2024-05-21-AICanNowCreatePhotorealisticVideosFromJustaTextPrompt_0.png)\n\n안녕하세요! 이전에 다양한 인공 지능 주제에 대해 이야기했던 것을 기억하시나요? 이번 포스트의 맨 끝에 관련 링크를 찾아볼 수 있어요. 하지만 오늘은 오픈 에이 아이의 최신 게임 체인지  툴, 소라에 대해 알아보려고 해요.\n\n요 며칠간, 유튜브를 둘러보다가 제가 가장 좋아하는 테크 유튜버, 마크스 브라운리의 새로운 영상을 발견했어요. 그 제목은 \"인공 지능이 만든 비디오가 영원히 바뀌었다\" 였어요. 그 말이 눈에 들어왔죠. 이 포스트를 읽은 후에 꼭 확인해보세요!\n\n<div class=\"content-ad\"></div>\n\nOpenAI의 Sora 앱은 필름 학교 없이 영화 제작을 마스터하여 시네마를 혁신하려고 합니다. 다른 회사들도 텍스트에서 비디오로 변환하는 AI 프로젝트에 진출했지만, Sora는 뛰어난 사실적인 그래픽과 1분까지 긴 클립을 만들 수 있는 능력으로 독보적입니다.\n\n이 클립들의 렌더링 시간은 상대적으로 빠르다고 설명되어, 임파이어 미디어인들에게 유망한 도구로 인식되고 있습니다.\n\nOpenAI는 Sora의 능력을 몇 가지 예시로 공유했습니다. 예를 들어, 도쿄에서 아름다운 눈 내리는 장면이 완벽한 벚꽃과 눈송이를 포함한 것을 보여줍니다. 이 클립의 디테일과 현실감은 인상적이지만 완벽하지는 않습니다.\n\n예를 들어, 주요 캐릭터들은 가상 카메라가 계속해서 움직인다면 막다른 길에 직면해야 하고, 작은 가드레일을 넘어서야 한다면 열쇠가 필요합니다. 하지만 소소한 불완전함에도 불구하고, 도쿄 예시는 Sora가 몰입적인 세계를 만들어내는 잠재력을 보여줍니다.\n\n<div class=\"content-ad\"></div>\n\nThe special thing about Sora is its tendency to not only meet the criteria of prompts but also grasp the nuances of cinematic language and storytelling. For example, in a video showcasing a paper-made coral reef, Sora effortlessly incorporated different camera angles and narrative flow, elevating the storytelling in the footage.\n\nAlthough Sora's capabilities are remarkable, there are valid concerns about its potential misuse, especially in the creation of deepfakes and misinformation. OpenAI acknowledges these risks and is dedicated to implementing safety measures like content limitations and labeling AI-produced material.\n\nDespite its promise, Sora doesn't pose a threat to traditional filmmaking. Its limitations, like the challenge of ensuring seamless continuity in edited clips, hold it back from replacing the intricate storytelling crafted by human filmmakers. Nonetheless, Sora and similar AI tools hold the potential to democratize content creation on social media platforms, empowering users to craft top-notch videos minus the need for costly gear.\n\n## Final Words\n\n<div class=\"content-ad\"></div>\n\nSora는 AI 기술을 활용한 콘텐츠 생성의 중요한 발전을 상징합니다. 이는 비디오 제작과 시청 방식을 혁신할 잠재력을 지니고 있습니다.\n\n하지만, OpenAI가 앞으로 나아갈 때 책임 있는 사용을 확보하고 잠재적인 위험을 완화하는 것은 주요 과제가 될 것입니다.\n\n몇 년 전 필름 학교에 다니던 시절에 Sora와 같은 도구가 있었으면 좋았을 텐데요. 그럼 제 프로젝트를 더 빨리 완성하는 데 도움이 되었을 텐데요.\n\n제 포스트를 즐기시고 최신 게임 관련 뉴스, 기술 발전, 디자인 트렌드 및 소셜 미디어 통찰을 업데이트하고 싶다면, 제 프로필을 팔로우해주시기 바랍니다.\n\n<div class=\"content-ad\"></div>\n\n나는 엔터테인먼트와 기술 분야의 다양한 주제에 대한 생각과 통찰을 계속 공유할 것입니다. \n\n그런 의미에서, 글을 읽어 주셔서 감사드리고 좋은 하루 보내세요.\n\n내 최근 이야기 중 일부는 내 마음에 깊게 다가왔고 더욱 주목받았습니다. 비슷한 꿈을 품은 작가들과 관심 있는 독자들을 위해 샘플 링크를 여기에 공유하겠습니다.\n\n**나의 샘플 주목받은 이야기**\n\n<div class=\"content-ad\"></div>\n\n저번에 제가 소개한 컬렉션들이에요.\n\n지난 달에 대한 업데이트를 제공했어요.\n\n기술과 인공지능과 관련된 몇 가지 이야기가 있는데, 즐길 거라고 생각해요:\n\n## 참고자료\n\n<div class=\"content-ad\"></div>\n\n# 나에 대해\n\n게임, 영화 제작, 소셜 미디어 및 디자인 등 내 분야의 기사를 쓰고 있습니다. 유튜버도 하고 있어요. Medium에 글을 올릴 때 알림을 받으시려면 제 계정을 구독해 주셔서 감사합니다. 또한 새로운 웹사이트를 만들어 무료로 내 콘텐츠를 공유하고, Medium의 기고자들의 이야기를 홍보하고 있어요. Substack 뉴스레터도 운영하고 있습니다. 트위터와 링크드인에서 함께 소통해요.\n\nMedium에 두 개의 게시물을 소유하고 있어요. 하나는 비디오 게임 팬들을 위한 것이고, 다른 하나는 유튜버와 팟캐스터를 위한 것이에요. 봉사 편집자로 작품을 편집하고 있으며 Slack Workspace의 협업 활동에 참여하고 있어요. 제 출판물에 대한 작가 지원은 이 링크를 통해 보내주시면 됩니다. Medium ID를 꼭 추가해주세요.\n\nMedium을 처음 사용하는 분이라면 작가들을 지원하기 위해 Medium의 친구가 되는걸 고려해보세요. 작가이신 분은 콘텐츠를 활용하여 수익을 창출할 수 있는 Vocal+ 회원이 되는 걸 고려해보세요. 두 플랫폼 모두에 글을 쓰며, 보다 많은 독자들에게 도달할 수 있도록 내 콘텐츠를 재활용하고 있어요. Vocal Media에 대한 자세한 정보가 여기 있습니다. 또한 Cliqly를 활용한 이메일 마케팅도 즐기고 있습니다.\n\n<div class=\"content-ad\"></div>\n\nILLUMINATION-Curated의 업그레이드 된 이야기도 꼭 확인해보세요!\n\n그리고 최신 비업그레이드 이야기 컬렉션도 확인해보세요.\n\n이 게시물에는 추천 링크가 포함돼 있습니다.","ogImage":{"url":"/assets/img/2024-05-21-AICanNowCreatePhotorealisticVideosFromJustaTextPrompt_0.png"},"coverImage":"/assets/img/2024-05-21-AICanNowCreatePhotorealisticVideosFromJustaTextPrompt_0.png","tag":["Tech"],"readingTime":4},{"title":"흑다이버스 2 팬들에게 소니의 미끼 전략, 허하자","description":"","date":"2024-05-21 00:10","slug":"2024-05-21-SonyPullingShadyTacticsonHellDivers2Fans","content":"\n\n대중의 강력한 반대로 소니가 화제가 된 계정 연동 요구 사항을 삭제했지만, 팬들에게 빠르게 속고 말았습니다.\n\n모드 및 커뮤니티가 스팀에서 게임 폭탄 투척으로 힘든 승리를 기념하는 동안, 소니는 또 다시 팬들에게 속임수를 부렸습니다.\n\n전 세계의 플레이어가 Hell Divers 2를 구매했지만 이제 Sony의 악랄한 전술로 게임을 플레이할 수 없게 되었습니다.\n\n![이미지](/assets/img/2024-05-21-SonyPullingShadyTacticsonHellDivers2Fans_0.png)\n\n<div class=\"content-ad\"></div>\n\nHelldivers 2이 180개 국가에서 금지되었습니다. 이 중 대부분은 아프리카 대륙에 속한 국가들이었는데, 에스토니아, 리투아니아, 라트비아도 그 중에 있습니다. 어떤 사용자는 Reddit에 이 지역을 강조한 지도를 공유했고, 일부 사용자들은 이것이 “소니가 신경 쓸 만큼 충분하지 않다”고 생각했습니다.\n\n아프리카는 비교적 소규모의 게임 콘솔 시장을 가지고 있으며, 최신 데이터에 따르면 이 지역의 수익은 3억 5600만 달러입니다. 전체 게임 콘솔 시장은 총 250억 달러가 넘습니다.\n\nHelldivers 2 커뮤니티는 마지막 숨을 거둔 동지를 기리기 위해 모였습니다. 플레이어들은 소셜 미디어에서 사용자의 사진과 게임에서의 모습 등을 슬라이드쇼로 제작하여 ‘묻힌 동지’를 위한 가상 추모식을 열었습니다. 정말로 존경스럽고 감동적이었는데, 이렇게 사람들을 함께 모으는 게임을 오랜만에 보았습니다.\n\n게임의 인기 스트리머 중 한 명인 Zanny도 해당 게임에 액세스 권한이 박탈당한 사용자들 중 하나였습니다.\n\n<div class=\"content-ad\"></div>\n\n이런 뒷질 살인 결정은 정말 나쁜 비즈니스에요. Hell Divers 2는 지금 가장 인기 있는 게임 중 하나라서 수백만 명에게 접근이 불가능하다는 건 Sony에게 장기적으로 해를 끼칠 것 같아요. 그들이 콘솔의 느리게 감소하는 판매량과 싸워가는 도중에.","ogImage":{"url":"/assets/img/2024-05-21-SonyPullingShadyTacticsonHellDivers2Fans_0.png"},"coverImage":"/assets/img/2024-05-21-SonyPullingShadyTacticsonHellDivers2Fans_0.png","tag":["Tech"],"readingTime":2},{"title":"이번 주에 Retro Handheld Gaming Enthusiasts들이 기쁨을 느낄 수 있는 소식이 있습니다 - John Cs Place","description":"","date":"2024-05-21 00:09","slug":"2024-05-21-RetroHandheldGamingEnthusiastsareinforaTreatthisWeekJohnCsPlace","content":"\n\n![Retro Handheld Gaming Enthusiasts](/assets/img/2024-05-21-RetroHandheldGamingEnthusiastsareinforaTreatthisWeekJohnCsPlace_0.png)\n\n# 이번 주에는 레트로 휴대용 게임 팬들을 위한 축제가 펼쳐집니다\n\n만약 당신이 고전 휴대용 게임기의 팬이라면, 기대해도 좋습니다! 왜냐하면 이번 주에는 당신을 위한 놀라운 소식이 준비 중이기 때문입니다! 그렇습니다, 그리워하는 휴대용 게임기 사용자들은 레트로 게임 세계에서 멋진 소식을 듣게 될 모습입니다.\n\n이렇게 상상해보세요: 당신은 어린 시절 즐겨 쥐고 있던 사랑받는 휴대용 게임기를 손에 쥔 채 Games Boy Color나 Neo Geo Pocket 등을 떠올립니다. 그때의 수많은 시간을 즐겁게 보내며 좋아하는 게임에 몰입했던 기억이 새록새록 솟아오르며, 버튼을 누르는 만족스러운 감각과 어려운 레벨을 극복한 행복이 떠오릅니다. 그런 감정들을 다시 느끼게 될 준비를 해보세요. 무언가 특별한 것이 오고 있습니다.\n\n<div class=\"content-ad\"></div>\n\n# 열광가들을 위한 향수의 열풍\n\n최근 레트로 게임이 부활하고 있습니다. 많은 플레이어들이 자신의 젊은 시절을 정의했던 클래식 콘솔과 휴대용 게임기를 찾고 있습니다. 현대의 타이틀들이 소환할 수 없는 옛날 게임들의 단숨함과 매력에는 그저 마법적인 무언가가 있습니다. 그리고 이제 게임 산업의 주요 업체들이 이를 주목하고 있는 것으로 보입니다.\n\n유명 회사가 새로운 장치를 발표할 것이라는 소문이 돌고 있습니다. 이 장치는 과거의 사랑받았던 휴대용 게임기를 연상시킨다고 합니다. 세부 사항은 아직 미지수이지만, 클래식 휴대용 콘솔에 현대적인 요소가 가미된 모습에 대한 단서만으로도 레트로 게임 커뮤니티가 흥미를 느끼고 있습니다.\n\n# 휴대용 게임의 힘\n\n<div class=\"content-ad\"></div>\n\n휴대용 게임이 왜 특별한지 알아보죠. 먼저, 이는 전통적인 콘솔이 따라갈 수 없는 휴대성과 편의성을 제공합니다. 가장 좋아하는 게임을 포켓에 넣고 언제 어디서나 즐길 수 있는 능력은 게임을 새롭게 만들어 주죠. 긴 통근 시간, 줄을 서는 동안, 혹은 집에서 편안히 누워 있을 때도 휴대용 장치는 접근성과 매력적인 게임 경험을 제공합니다.\n\n게다가 이러한 장치의 소형화는 종종 독특하고 혁신적인 게임 디자인으로 이어집니다. 화면 크기와 처리능력이 제한적이기 때문에 개발자들은 창의적으로 재해석하여 시대를 초월하는 기억에 남는 제목을 만들어 냅니다. 중독성 있는 Tetris 퍼즐 게임부터 포켓몬의 화려한 모험까지, 휴대용 게임은 게임 역사에 불을 지핀 트랙을 남겼습니다.\n\n**걸리의 모드에 대해 읽어보세요. 닌텐도 관련 콘텐츠를 모두 제거해야 합니다.**\n\n# 빛나는 미래가 기다리고 있어요\n\n<div class=\"content-ad\"></div>\n\n뜨거운 소식을 기다리면서 레트로 휴대용 게임 애호가들을 위한 미래는 밝아 보입니다. 고전 휴대용 콘솔의 본질을 담은 현대적인 장치라는 아이디어는 너무나 흥미롭습니다. 업데이트된 그래픽, 개선된 컨트롤, 그리고 아마도 온라인 기능이 포함된 즐겁고 재미있는 오래된 게임을 플레이해 보세요. 가능성은 무한합니다!\n\n그러니 레트로 휴대용 게임을 좋아하는 분들은 눈을 크게 뜨고 기대를 더 높여 보세요. 이번 주가 휴대용 게임 세계에서 정말 특별한 무엇인가의 시작이 될 수도 있습니다. 옛날 게임 카트리지를 꺼내 먼지를 털고 절로 눈물이 나는 여정을 준비하세요. 오래된 클래식 휴대용 게임의 미래는 이전보다 더 밝아보입니다!\n\n제 다른 플랫폼들을 확인하려면 내 링크트리를 방문해주세요!\n\n원문은 2024년 5월 16일에 https://jcorcione.com에서 게시되었습니다.","ogImage":{"url":"/assets/img/2024-05-21-RetroHandheldGamingEnthusiastsareinforaTreatthisWeekJohnCsPlace_0.png"},"coverImage":"/assets/img/2024-05-21-RetroHandheldGamingEnthusiastsareinforaTreatthisWeekJohnCsPlace_0.png","tag":["Tech"],"readingTime":2},{"title":"디스코드에서 Mantle Network의 LightCycle OG Role을 요청하세요","description":"","date":"2024-05-21 00:08","slug":"2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord","content":"\n\n우선, LightCycle OG NFT 민트 이벤트 기간 동안 모두의 엄청난 지지에 감사드립니다! Mantle 체인 상에 총 3,000개의 NFT가 성공적으로 민트되었음을 기쁘게 알립니다! NFT를 성공적으로 민트한 분들은 이제 Discord 서버(https://discord.com/invite/pdtsD2wMx5)에서 자신의 OG 역할을 요청할 수 있습니다.\n\n단계 1: 이 링크(https://guild.xyz/lightcycle)를 클릭하여 접속하고, \"로그인\"을 클릭한 후, OG NFT를 보유한 지갑을 선택하여 로그인해주세요.\n\n![ClaimLightCycleOGRoleMantleNetworkonDiscord_1.png](/assets/img/2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord_1.png)\n\n<div class=\"content-ad\"></div>\n\n**Step 2:** Click “Verify Address,” then click “Check Access to Join,” and you will see “You have access” in the Member section of the first verification task.\n\n![Step 3](/assets/img/2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord_3.png)\n\n![Step 4](/assets/img/2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord_4.png)\n\n<div class=\"content-ad\"></div>\n\nStep 3: 두번째 확인 작업 “로봇이 아님”을 위해 “연결 필요로 함”을 클릭한 후, CAPTCHA를 완료하세요. 디스코드에 연결하려면 “지갑”을 선택하고, “연결”을 클릭한 후 디스코드 계정을 “인증”해주세요.\n\n![Image 6](/assets/img/2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord_6.png)\n\n![Image 7](/assets/img/2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord_7.png)\n\n<div class=\"content-ad\"></div>\n\n4단계: \"Join Guild to check access\"를 눌러 세 번째 검증 작업인 \"LightCycle OG NFT Holder - Mantle\"을 확인하세요. 이렇게 하면 LightCycle OG NFT 역할이 부여됩니다. 디스코드를 확인하여 역할을 받았는지 확인해보세요.\n\n![image](/assets/img/2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord_8.png)\n\n우선 액세스: 보유자들은 LightCycle 작업 포인트 제품에 우선 액세스 권한을 얻으며, 비보유자들은 초대 코드가 필요합니다.\n\n보너스 작업 포인트: 보유자들은 작업 포인트에 1.1배의 보너스를 받아 Lightcycle 토큰 에어드랍에 쉽게 참여할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n**WL Access**: Holders of this token gain exclusive whitelist privileges for exciting collaborations within the LightCycle ecosystem.\n\n**Transaction Fee Share**: Holders will receive a portion of transaction fees generated from virtual product trades within the future ecosystem.\n\nEmbrace the Community:\n- Website: [LightCycle City](https://lightcycle.city/)\n- Twitter: [@lightcycle_city](https://twitter.com/lightcycle_city)\n- Discord: [Join us](https://discord.com/invite/pdtsD2wMx5)\n- Telegram: [LightCycle City](https://t.me/LightCycle_City)","ogImage":{"url":"/assets/img/2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord_0.png"},"coverImage":"/assets/img/2024-05-21-ClaimLightCycleOGRoleMantleNetworkonDiscord_0.png","tag":["Tech"],"readingTime":3},{"title":"구글 트렌드 과제","description":"","date":"2024-05-21 00:04","slug":"2024-05-21-GoogleTrendsAssignment","content":"\n\n# Tik Tok vs Instagram\n\n![Google Trends Comparison](/assets/img/2024-05-21-GoogleTrendsAssignment_0.png)\n\nClick to view the chart.\n\nWhen we analyze the Google Trends data for TikTok and Instagram, we can track the growth of their popularity over time. Both platforms experienced significant spikes in interest upon their creation, with TikTok initially having a period of dormancy in terms of Google searches. Instagram followed a similar pattern, but as it was established much earlier, we observe its steady rise in popularity over time. Notably, TikTok also saw a surge in interest after its inception in late 2017, maintaining its appeal ever since. 🌟\n\n<div class=\"content-ad\"></div>\n\n요즘 몇 년 동안 Tik Tok가 세계를 휩쓴 것 같아요. 어떤 순간에는 Instagram을 앞질렀을 수도 있다고 생각했어요. 하지만 그래프를 보니 실제로는 다르다는 걸 알 수 있어요. Instagram은 소셜 미디어의 세계에서 인기를 유지하고 있고, Tik Tok 같은 신인을 이기기도 해요. 이렇게 큰 차이가 있을 줄은 예상치 못했고, 현재 사용자들이 즐기는 것을 고려하면 그들이 인기를 조금 잃었을 것으로 기대했어요.\n\nInstagram은 Tik Tok에 대응하여 Instagram Reels를 소개함으로써 인기를 유지했다고 생각해요. 이를 통해 Instagram은 Tik Tok와 경쟁력을 유지하고 사용자들을 그들의 플랫폼에 유도할 수 있었죠.\n\n# 농구 대 축구\n\n![그래프](/assets/img/2024-05-21-GoogleTrendsAssignment_1.png)\n\n<div class=\"content-ad\"></div>\n\n그래프를 확인하세요.\n\n구글 트렌드를 분석하기 위해 유명한 스포츠를 살펴보기로 했어요. 농구와 축구를 비교해 보았고, 미국뿐만 아니라 전 세계적인 수준에서 어떻게 나타나는지도 살펴보기로 했어요.\n\n처음에는 가장 인기 있는 스포츠인 축구가 더 일관되고 농구보다 검색이 더 많을 것이라고 생각했어요. 그러나 제 분석 결과 두 스포츠 사이에 번갈아가며 변동이 있음을 발견했어요. 농구와 축구의 검색량은 일반적으로 비슷하며, 두 스포츠 모두 검색 횟수가 많은 스파이크를 가지고 있어요.\n\n농구는 연중 중요한 농구 이벤트와 함께 매우 큰 스파이크를 가지고 있어요. 예를 들어, 3월은 항상 농구 검색 수가 많이 늘어나는 때예요. 이는 3월 매드니스(March Madness)와 미국 대학 수준의 토너먼트와 관련이 있어요. 나는 이러한 토너먼트들이 특히 전 세계적인 수준에서 얼마나 영향력이 큰지 몰랐어요. 농구와 비슷하게, 축구도 자기들의 큰 대회와 함께 스파이크를 가지고 있어요. 2022년 월드컵은 대회 기간 동안 잠시 농구를 앞지르는 큰 스파이크로 볼 수 있어요.\n\n<div class=\"content-ad\"></div>\n\n이번 Google Trends 자료에 대해 정말 놀랐어요. 축구가 더 인기 있고 꾸준할 줄 알았는데, 오히려 그 반대인 것을 알게 되어 놀랐어요. 게다가 3월의 미치광이와 같은 미국의 농구 이벤트가 전 세계적인 검색 트렌드에 큰 영향을 미치는 것을 발견해서 흥미롭다고 생각해요.","ogImage":{"url":"/assets/img/2024-05-21-GoogleTrendsAssignment_0.png"},"coverImage":"/assets/img/2024-05-21-GoogleTrendsAssignment_0.png","tag":["Tech"],"readingTime":2}],"page":"2","totalPageCount":15,"totalPageGroupCount":1,"lastPageGroup":15,"currentPageGroup":0},"__N_SSG":true}